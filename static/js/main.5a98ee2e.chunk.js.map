{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/App.jsx","index.js"],"names":["ContactForm","state","name","number","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","onAddContact","props","this","onSubmit","htmlFor","onChange","type","pattern","placeholder","Component","Filter","filterValue","onFilterChange","defaultProps","ContactItem","contact","onDeleteContact","onClick","ContactList","filteredContacts","map","key","App","contacts","filter","addContact","find","toLowerCase","alert","newContact","uuidv4","prevState","deleteContact","filterContacts","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a98ee2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport T from 'prop-types';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: T.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onAddContact } = this.props;\n\n    onAddContact(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\">\n          Name\n          <input id=\"name\" value={name} onChange={this.handleChange} />\n        </label>\n        <label htmlFor=\"number\">\n          Number\n          <input\n            id=\"number\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            placeholder=\"0xx-xxx-xx-xx\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\n\nconst Filter = ({ filterValue, onFilterChange }) => (\n  <>\n    <p>Find contacts by name</p>\n    <input id=\"filter\" value={filterValue} onChange={onFilterChange} />\n  </>\n);\n\nFilter.defaultProps = {\n  filterValue: '',\n};\n\nFilter.propTypes = {\n  filterValue: T.string,\n  onFilterChange: T.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst ContactItem = ({ contact, onDeleteContact }) => (\n  <li>\n    <p>{`${contact.name}: ${contact.number}`}</p>\n    <button type=\"button\" onClick={onDeleteContact}>\n      Delete\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  contact: T.shape({\n    name: T.string.isRequired,\n    number: T.string.isRequired,\n  }).isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport T from 'prop-types';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ filteredContacts, onDeleteContact }) => (\n  <ul>\n    {filteredContacts.map(contact => (\n      <ContactItem\n        key={contact.id}\n        contact={contact}\n        onDeleteContact={() => onDeleteContact(contact.id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  filteredContacts: T.arrayOf(T.object).isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n\n    const existedContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (existedContact) {\n      // eslint-disable-next-line no-alert\n      alert(`${name} is aleready in contacts`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  onFilterChange = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const filteredContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 0 && (\n          <>\n            <Filter filterValue={filter} onFilterChange={this.onFilterChange} />\n            <ContactList\n              filteredContacts={filteredContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}